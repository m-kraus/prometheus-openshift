apiVersion: v1
kind: Template
metadata:
  name: haproxy-template
  annotations:
    description: "Template for haproxy"
    iconClass: "icon-beaker"
    tags: "haproxy"
parameters:
- description: 'HAProxy stats username'
  name: HAPROXY_STATS_USERNAME
  required: true
- description: 'HAProxy stats password'
  name: HAPROXY_STATS_PASSWORD
  required: true
objects:
- apiVersion: v1
  kind: Secret
  metadata:
    name: sec-haproxy-stats-credentials
  stringData:
    # admin
    username: ${HAPROXY_STATS_USERNAME}
    password: ${HAPROXY_STATS_PASSWORD}
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    creationTimestamp: null
    generation: 1
    labels:
      app: exporter
    name: exporter
  spec:
    replicas: 1
    selector:
      app: exporter
    strategy:
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: exporter
      spec:
        containers:
        - args:
#          - --haproxy.scrape-uri=http://$(USERNAME):$(PASSWORD)@router.default.svc:1936/haproxy?stats;csv
          - --haproxy.scrape-uri=http://$(USERNAME):$(PASSWORD)@172.30.3.135:1936/haproxy?stats;csv

          image: prom/haproxy-exporter
          imagePullPolicy: Always
          name: exporter
          ports:
          - containerPort: 9101
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          env:
            - name: USERNAME
              valueFrom:
                secretKeyRef:
                  name: sec-haproxy-stats-credentials
                  key: username
            - name: PASSWORD
              valueFrom:
                secretKeyRef:
                  name: sec-haproxy-stats-credentials
                  key: password
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers:
    - type: ConfigChange
  status:
    observedGeneration: 1
    replicas: 1
    unavailableReplicas: 1
    updatedReplicas: 1
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    labels:
      app: exporter
    name: exporter
  spec:
    ports:
    - port: 9101
      protocol: TCP
      targetPort: 9101
    selector:
      app: exporter
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Route
  metadata:
    labels:
      app: exporter
    name: exporter
  spec:
    port:
      targetPort: 9101
    to:
      kind: Service
      name: exporter
      weight: 100
